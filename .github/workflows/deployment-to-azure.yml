name: Deploy Frontend and Backend to Azure

on:
  push:
    branches:
      - main

jobs:
  # React Frontend Deployment
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd AIDoctor.client
          npm install

      - name: Build React App
        run: |
          cd AIDoctor.client
          npm run build

      - name: Deploy to Azure App Service (Frontend)
        uses: azure/webapps-deploy@v2
        with:
          app-name: "AiDoctor-WebApp"  # Replace with your Azure Web App Name
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: "AIDoctor.client/build"

  # Backend API Deployment
  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend  # Ensures frontend deploys first
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: |
          cd AIDoctor.Server
          dotnet restore

      - name: Build and Publish API
        run: |
          cd AIDoctor.Server
          dotnet publish -c Release -o publish

      - name: Deploy to Azure App Service (Backend)
        uses: azure/webapps-deploy@v2
        with:
          app-name: "AiDoctor-WebApp"
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: "AIDoctor.Server/publish"

  # Database Migrations
  update-database:
    runs-on: ubuntu-latest
    needs: deploy-backend  # Runs after backend is deployed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: |
          cd AIDoctor.Server
          dotnet restore

      - name: Install EF Core CLI
        run: |
          dotnet tool install --global dotnet-ef

      - name: Run EF Core Migrations
        run: |
          cd AIDoctor.Server
          dotnet ef database update
