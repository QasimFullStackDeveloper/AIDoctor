name: Deploy Frontend and Backend to Azure

on:
  push:
    branches:
      - main

jobs:
  # React Frontend Deployment
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd AIDoctor.client
          rm -rf node_modules package-lock.json
          npm install

      - name: Debug - Check NPM Logs
        run: |
          cd AIDoctor.client
          npm run build || { echo "React build failed!"; exit 1; }

      - name: Build React App
        run: |
          cd AIDoctor.client
          npm run build

      - name: Debug - List Build Folder
        run: ls -la AIDoctor.client/build

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "AIDoctor.client/build"
          output_location: ""

  # Backend API Deployment
  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: |
          cd AIDoctor.Server
          dotnet restore

      - name: Build and Publish API
        run: |
          cd AIDoctor.Server
          dotnet publish -c Release -o publish

      - name: Deploy to Azure App Service (Backend)
        uses: azure/webapps-deploy@v2
        with:
          app-name: "AiDoctor-WebApp"
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: "AIDoctor.Server/publish"

  # Database Migrations
  update-database:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: |
          cd AIDoctor.Server
          dotnet restore

      - name: Install EF Core CLI
        run: |
          dotnet tool install --global dotnet-ef --version 8.0.0

      - name: Debug - Show EF Migrations
        run: |
          cd AIDoctor.Server
          dotnet ef migrations list

      - name: Run EF Core Migrations
        run: |
          cd AIDoctor.Server
          dotnet ef database update
